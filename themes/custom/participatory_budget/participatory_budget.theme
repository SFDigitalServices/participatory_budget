<?php
// vi: filetype=php

use \Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function participatory_budget_theme_suggestions_region_alter(array &$suggestions, array $variables, $hook) {
  // allow overriding region template by content type
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'region__' . $variables['elements']['#region'] . '__' . $content_type;
  }
}

function participatory_budget_theme_suggestions_block_alter(array &$suggestions, array $variables, $hook) {
  // allow overriding block template by content type
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'block__' . $variables['elements']['#id'] . '__' . $content_type;
  }
}

/**
 * Implements hook_form_alter().
 */
function participatory_budget_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
  case 'user_pass':
    $form['#prefix'] = t('<h2>Password reset</h2>');
    break;
  case 'user_login_form':
    $form['#prefix'] = t('<h2>Login</h2>');
    break;
  }
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function participatory_budget_preprocess_menu(&$variables) {
  if (!isset($variables['menu_name'])) {
    return;
  }

  // style front page navigation menu
  if ($variables['menu_name'] == 'main' && $variables['attributes']['block'] == 'block-front-page-navigation') {
    if (!isset($variables['attributes']['class'])) {
      $variables['attributes']['class'] = [];
    }
    $variables['attributes']['class'] = array_merge($variables['attributes']['class'], ['list-unstyled']);
    foreach ($variables['items'] as $id => $link) {
      $link['attributes']->addClass('col-md-6 district-link-wrapper');
    }
  }

  // style front page navigation menu
  if ($variables['menu_name'] == 'main' && $variables['attributes']['block'] == 'block-mainnavigation') {
    if (!isset($variables['attributes']['class'])) {
      $variables['attributes']['class'] = [];
    }
    $variables['attributes']['class'] = array_merge($variables['attributes']['class'], ['container list-unstyled']);
    foreach ($variables['items'] as $id => $link) {
      $link['attributes']->addClass('col-md-4 button');
    }
  }
}

/**
 * Implements hook_preprocess_block().
 *
 * Same block ID for use in preprocess_menu
 */
function participatory_budget_preprocess_block(&$variables) {
  $variables['content']['#attributes']['block'] = $variables['attributes']['id'];

  switch ($variables['attributes']['id']) {
  case 'block-participatory-budget-branding':
    // different content types have different branding blocks
    // ideally we'd cache per content type, but I wasn't able to figure out how
    // to make that happen
    $variables['#cache']['contexts'][] = 'url.path';
  }
}
